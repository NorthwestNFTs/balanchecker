{"version":3,"sources":["utils/contract.js","utils/setup.js","utils/funcs.js","App.jsx","serviceWorker.js","index.js"],"names":["TOKEN_ABI","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","web3","Web3","tokenContract","tokenAddress","eth","Contract","getBalances","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","addresses","getBalance","addressList","addressesPromise","balances","wrap","_context","prev","next","toConsumableArray","Set","split","addr","methods","balanceOf","call","map","address","utils","isAddress","Promise","all","sent","abrupt","reduce","accummulator","index","result","csvData","push","stop","_x","_x2","apply","this","arguments","initialState","App","_useState","useState","_useState2","slicedToArray","state","setState","handleChange","e","_e$target","target","value","prevState","objectSpread","defineProperty","react_default","createElement","className","Form","autoComplete","Input","onChange","placeholder","TextArea","Button","onClick","then","JSON","stringify","length","react_csv","filename","data","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67fe42cf.chunk.js","sourcesContent":["const TOKEN_ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_from',\n        type: 'address'\n      },\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      }\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: 'balance',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        name: '_spender',\n        type: 'address'\n      }\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    payable: true,\n    stateMutability: 'payable',\n    type: 'fallback'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  }\n];\n\nexport default TOKEN_ABI;\n","import Web3 from 'web3';\nimport TOKEN_ABI from './contract';\n\nconst web3 = new Web3(\n  'https://mainnet.infura.io/v3/6cae396f06e84c3abc9ddbdf0bbf084f'\n);\n\nexport const tokenContract = tokenAddress =>\n  new web3.eth.Contract(TOKEN_ABI, tokenAddress);\n\nexport default web3;\n","import web3, { tokenContract } from './setup';\n\nexport const getBalances = async (tokenAddress, addresses) => {\n  let getBalance;\n  const addressList = [...new Set(addresses.split(/\\s+/))];\n  if (tokenAddress) {\n    getBalance = addr =>\n      tokenContract(tokenAddress)\n        .methods.balanceOf(addr)\n        .call();\n  } else {\n    getBalance = web3.eth.getBalance;\n  }\n  const addressesPromise = addressList.map(address => {\n    if (web3.utils.isAddress(address)) {\n      return getBalance(address);\n    }\n    return 'invalid address';\n  });\n  const balances = await Promise.all(addressesPromise);\n  return addressList.reduce((accummulator, address, index) => {\n    accummulator.result[address] = balances[index];\n    accummulator.csvData.push([address, balances[index]])\n    return accummulator;\n  }, {result: {}, csvData: [[\"Address\", \"Balance\"]]});\n};\n","import React, { useState } from 'react';\nimport { TextArea, Button, Input, Form } from 'semantic-ui-react';\nimport { CSVLink } from 'react-csv';\nimport { getBalances } from './utils/funcs';\nimport 'semantic-ui-css/semantic.min.css';\nimport './assets/style.css';\n\nconst initialState = {\n  tokenAddress: '',\n  addresses: '',\n  result: {},\n  csvData: []\n};\nfunction App() {\n  const [state, setState] = useState(initialState);\n  const { tokenAddress, addresses, result, csvData } = state;\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Balanchecker</header>\n      <main>\n        <Form autoComplete=\"off\">\n          <Input\n            autoComplete=\"off\"\n            onChange={handleChange}\n            name=\"tokenAddress\"\n            value={tokenAddress}\n            placeholder=\"Token address\"\n          />\n          <TextArea\n            onChange={handleChange}\n            name=\"addresses\"\n            value={addresses}\n            placeholder=\"Paste your ethereum addresses here\"\n          />\n          <Button\n            onClick={() =>\n              getBalances(tokenAddress, addresses).then(\n                ({ result, csvData }) => {\n                  setState(prevState => ({ ...prevState, result, csvData }));\n                }\n              )\n            }\n          >\n            Check balance\n          </Button>\n          <TextArea\n            value={JSON.stringify(result)}\n            onChange={handleChange}\n            placeholder=\"Results\"\n          />\n\n          {csvData.length ? (\n            <CSVLink filename=\"data.csv\" data={csvData}>\n              Download CSV\n            </CSVLink>\n          ) : null}\n        </Form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}